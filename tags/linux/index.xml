<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Of Code &amp; Systems</title><link>https://zzamzam.dev/tags/linux/</link><description>Recent content in linux on Of Code &amp; Systems</description><generator>Hugo -- gohugo.io</generator><language>ru-RU</language><lastBuildDate>Sat, 18 Nov 2023 12:00:00 +0300</lastBuildDate><atom:link href="https://zzamzam.dev/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Переменные окружения процесса в linux</title><link>https://zzamzam.dev/posts/2023-11-18-linux-process-envs/</link><pubDate>Sat, 18 Nov 2023 12:00:00 +0300</pubDate><guid>https://zzamzam.dev/posts/2023-11-18-linux-process-envs/</guid><description>&lt;h1 id="как-получить-переменные-окружения-процесса">Как получить переменные окружения процесса&lt;/h1>
&lt;p>&lt;strong>Простой ответ&lt;/strong>: прочитав файл &lt;code>/proc/&amp;lt;pid&amp;gt;/environ&lt;/code>&lt;/p>
&lt;p>Однако таким образом можно получить только те переменные окружения, которые были заданы на момент создания процесса. Если же во время работы программа меняла/устанавливала новые/удаляла переменные окружения через, например, &lt;a href="https://man7.org/linux/man-pages/man3/setenv.3.html">setenv&lt;/a> / &lt;a href="https://man7.org/linux/man-pages/man3/unsetenv.3.html">unsetenv&lt;/a>, то эти изменения в файле отражены не будут. Эти значения можно уже будет достать только из оперативной памяти, либо если текущая программа вызовет другую через &lt;a href="https://man7.org/linux/man-pages/man2/fork.2.html">fork&lt;/a> или &lt;a href="https://man7.org/linux/man-pages/man3/exec.3.html">exec&lt;/a> - в таком случае для нового процесса будет заново проинициализирован &lt;code>/proc/&amp;lt;pid&amp;gt;/environ&lt;/code> с переменными окружениям родителя/замещённого процесса&lt;/p>
&lt;h2 id="почему-так-происходит">Почему так происходит?&lt;/h2>
&lt;p>Файл &lt;code>/proc/&amp;lt;pid&amp;gt;/environ&lt;/code> находится в директории &lt;code>/proc&lt;/code>, которая, по сути, предоставляет доступ к структурам данных ядра в оперативной памяти через специальный драйвер файловой системы procfs&lt;/p></description></item></channel></rss>
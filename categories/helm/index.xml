<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>helm on Of Code &amp; Systems</title><link>/categories/helm/</link><description>Recent content in helm on Of Code &amp; Systems</description><generator>Hugo -- gohugo.io</generator><language>ru-RU</language><lastBuildDate>Wed, 04 Mar 2020 23:32:24 +0300</lastBuildDate><atom:link href="/categories/helm/index.xml" rel="self" type="application/rss+xml"/><item><title>Организация деплоя в множество окружений с помощью helmfile</title><link>/2020/03/helmfile-ogranization/</link><pubDate>Wed, 04 Mar 2020 23:32:24 +0300</pubDate><guid>/2020/03/helmfile-ogranization/</guid><description>&lt;p>&lt;a href="https://github.com/roboll/helmfile">Helmfile&lt;/a> - обёртка для &lt;a href="https://github.com/helm/helm/">helm&lt;/a>, которая позволяет в одном месте описывать множество helm релизов, параметризовать их чарты для нескольких окружений, а также задавать порядок их деплоя.&lt;/p>
&lt;p>О самом helmfile и примерах его использования можно почитать в &lt;a href="https://github.com/roboll/helmfile/blob/master/README.md">readme&lt;/a> и &lt;a href="https://github.com/roboll/helmfile/blob/master/docs/writing-helmfile.md">best practices guide&lt;/a>.&lt;/p>
&lt;p>Мы же познакомимся с неочевидными способами описать релизы в helmfile&lt;/p>
&lt;p>Допустим, у нас есть пачка helm-чартов (для примера пусть будет postgres и некое backend приложение) и несколько окружений (несколько kubernetes кластеров, несколько namespace'ов или несколько и того, и другого). Берём helmfile, читаем документацию и начинаем описывать наши окружения и релизы:&lt;/p>
&lt;pre>&lt;code> .
├── envs
│   ├── devel
│   │   └── values
│   │   ├── backend.yaml
│   │   └── postgres.yaml
│   └── production
│   └── values
│   ├── backend.yaml
│   └── postgres.yaml
└── helmfile.yaml
&lt;/code>&lt;/pre></description></item></channel></rss>